syntax = "proto3";
package okchain.dex;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/cosmos.proto";

option go_package = "github.com/okex/okchain/x/dex/types";

message MsgList {
    option (gogoproto.equal) = true;
    bytes owner = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    string list_asset = 2;
    string quote_asset = 3;
    string init_price = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}

message MsgDeposit {
    option (gogoproto.equal) = true;
    string product = 1;
    cosmos.DecCoin amount = 2 [(gogoproto.nullable) = false];
    bytes depositor = 3 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

message MsgWithdraw {
    option (gogoproto.equal) = true;
    string product = 1;
    cosmos.DecCoin amount = 2 [(gogoproto.nullable) = false];
    bytes depositor = 3 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

message MsgTransferOwnership {
    option (gogoproto.equal) = true;
    bytes from_address = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.moretags) = "yaml:\"from_address\""];
    bytes to_address = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.moretags) = "yaml:\"to_address\""];
    string product = 3 [(gogoproto.moretags) = "yaml:\"product\""];
    bytes pubkey = 4 [(gogoproto.moretags) = "yaml:\"pubkey\""];
    bytes to_signature = 5 [(gogoproto.moretags) = "yaml:\"to_signature\""];
}
